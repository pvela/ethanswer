doctype html
html(lang="en")
  head
    meta(charset="utf-8")
    meta(http-equiv="X-UA-Compatible" content="IE=edge")
    meta(name="author" content="ScriptsBundle")
    title ETHAnswer - Bounty for Question and Answers
    // =-=-=-=-=-=-= Favicons Icon =-=-=-=-=-=-=
    link(rel="icon" href="images/favicon.ico" type="image/x-icon")
    // =-=-=-=-=-=-= Mobile Specific =-=-=-=-=-=-=
    meta(name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1")
    // =-=-=-=-=-=-= Bootstrap CSS Style =-=-=-=-=-=-=
    link(rel="stylesheet" href="css/bootstrap.css")
    // =-=-=-=-=-=-= Template CSS Style =-=-=-=-=-=-=
    link(rel="stylesheet" href="css/style.css")
    // =-=-=-=-=-=-= Font Awesome =-=-=-=-=-=-=
    link(rel="stylesheet" href="css/font-awesome.css")
    // =-=-=-=-=-=-= Et Line Fonts =-=-=-=-=-=-=
    link(rel="stylesheet" href="css/et-line-fonts.css")
    // =-=-=-=-=-=-= Google Fonts =-=-=-=-=-=-=
    link(href="http://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic|Merriweather:400,300,300italic,400italic,700,700italic" rel="stylesheet" type="text/css")
    // =-=-=-=-=-=-= Owl carousel =-=-=-=-=-=-=
    link(rel="stylesheet" type="text/css" href="css/owl.carousel.css")
    link(rel="stylesheet" type="text/css" href="css/owl.style.css")
    // =-=-=-=-=-=-= Highliter Css =-=-=-=-=-=-=
    link(type="text/css" rel="stylesheet" href="css/styles/shCoreDefault.css")
    // =-=-=-=-=-=-= Css Animation =-=-=-=-=-=-=
    link(type="text/css" rel="stylesheet" href="css/animate.min.css")
    // =-=-=-=-=-=-= Hover Dropdown =-=-=-=-=-=-=
    link(type="text/css" rel="stylesheet" href="css/bootstrap-dropdownhover.min.css")
    // =-=-=-=-=-=-= Custom Stylesheets =-=-=-=-=-=-=
    link(type="text/css" rel="stylesheet" href="stylesheets/style.css")
    // JavaScripts
    script(src="js/modernizr.js")
    script(type='text/javascript' src='https://api.stackexchange.com/js/2.0/all.js')
    script(src="https://unpkg.com/ipfs-api@9.0.0/dist/index.js" integrity="sha384-5bXRcW9kyxxnSMbOoHzraqa7Z0PQWIao+cgeg327zit1hz5LZCEbIMx/LWKPReuB" crossorigin="anonymous")
    // HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries
    // WARNING: Respond.js doesn't work if you view the page via file://
    //if lt IE 9
      script(src="http://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js")
      script(src="http://oss.maxcdn.com/respond/1.4.2/respond.min.js")

  body
    // =-=-=-=-=-=-= PRELOADER =-=-=-=-=-=-=
    .preloader
      span.preloader-gif
    // =-=-=-=-=-=-= HEADER =-=-=-=-=-=-=
    .top-bar
      .container
        .row
          .col-lg-4.col-md-4.col-sm-6.col-xs-4
            ul.top-nav.nav-left
              li
                a(href="index.html") Home
              li.hidden-xs
                a(href="#") Contact Us
          .col-lg-8.col-md-8.col-sm-6.col-xs-8
            ul.top-nav.nav-right
              li
                button(id='login-button')
                  | Login
              li
                a(href="#")
                  i.fa.fa-user-plus(aria-hidden="true")
                  | Signup
              li.dropdown
                a.dropdown-toggle(data-hover="dropdown" data-toggle="dropdown" data-animations="fadeInUp")
                  img.img-circle.resize(alt="" src="images/authors/13.jpg")
                  span.hidden-xs.small-padding
                    span
                    i.fa.fa-caret-down
                ul.dropdown-menu
                  li
                    a(href="#")
                      i.icon-bargraph
                      |  Dashboard
                  li
                    a(href="#")
                      i.icon-gears
                      |  Profile Setting
                  li
                    a(href="#")
                      i.icon-heart
                      |  Questions
                  li
                    a(href="#")
                      i.icon-lock
                      |  Logout
    // =-=-=-=-=-=-= HEADER Navigation =-=-=-=-=-=-=
    .navbar.navbar-default
      .container
        // header
        .navbar-header
          button.navbar-toggle(data-target=".navbar-collapse" data-toggle="collapse" type="button")
            span.icon-bar
            span.icon-bar
            span.icon-bar
          // logo
          a.navbar-brand(href="index.html")
            img.img-responsive(alt="" src="images/logo.png")
          // header end
        // navigation menu
        .navbar-collapse.collapse
          // right bar
          ul.nav.navbar-nav.navbar-right
            li.hidden-sm
              a(href="#") How  It Works
            li
              a(href="#") Browse Questions
            li
              .btn-nav
                a.btn.btn-primary.btn-small.navbar-btn(href="#") Post Question
        // navigation menu end
        // /.navbar-collapse
    // HEADER Navigation End
    //- // =-=-=-=-=-=-= HOME =-=-=-=-=-=-=
    //- .full-section.search-section
    //-   .search-area.container
    //-     h3.search-title Have a Question?
    //-     p.search-tag-line If you have any question you can ask below or enter what you are looking for!
    //-     form#search-form.search-form.clearfix(autocomplete="off" method="get")
    //-       input.search-term(type="text" title="* Please enter a search term!" placeholder="Type your search terms here" autocomplete="off")
    //-       input.search-btn(type="submit" value="Search")
    //- // =-=-=-=-=-=-= HOME END =-=-=-=-=-=-=
    // =-=-=-=-=-=-= Main Area =-=-=-=-=-=-=
    .main-content-area
      // =-=-=-=-=-=-= Latest Questions  =-=-=-=-=-=-=
      section#latest-post.white.question-tabs.padding-bottom-80
        .container
          .row
            // Content Area Bar
            block content
            .clearfix
        // end container
      // =-=-=-=-=-=-= Latest Questions  End =-=-=-=-=-=-=
    // =-=-=-=-=-=-= Main Area End =-=-=-=-=-=-=
    // =-=-=-=-=-=-= FOOTER =-=-=-=-=-=-=
    footer.footer-area
      // Footer Upper
      .footer-content
        .container
          .row.clearfix
            .col-md-8.col-md-offset-2
              .footer-content.text-center.no-padding.margin-bottom-40
                .logo-footer
                  img#logo-footer.center-block(src="images/logo-1.png" alt="")
                p Set bounty on your questions and get answers faster
            // Two 4th column
    // =-=-=-=-=-=-= JQUERY =-=-=-=-=-=-=
    script(src="js/jquery.min.js")
    // Bootstrap Core Css
    script(src="js/bootstrap.min.js")
    // Jquery Smooth Scroll
    script(src="js/jquery.smoothscroll.js")
    // Jquery Easing
    script(type="text/javascript" src="js/easing.js")
    // Jquery Counter
    script(src="js/jquery.countTo.js")
    // Jquery Waypoints
    script(src="js/jquery.waypoints.js")
    // Jquery Appear Plugin
    script(src="js/jquery.appear.min.js")
    // Carousel Slider
    script(src="js/carousel.min.js")
    // Jquery Parallex
    script(src="js/jquery.stellar.min.js")
    // Style Switcher
    script(src="js/bootstrap-dropdownhover.min.js")
    // Include jQuery Syntax Highlighter
    script(type="text/javascript" src="scripts/shCore.js")
    script(type="text/javascript" src="scripts/shBrushPhp.js")
    // Template Core JS
    script(src="js/custom.js")
    script(type='text/javascript' src='js/buttons.js')
    script.
      if (window.location.href.indexOf('localhost') < 0) {
        // For simplicity, we're using jQuery for some things
        //   However, the library has no jQuery dependency
        $(function(){
        // Initialize library
        SE.init({ 
            // Parameters obtained by registering an app, these are specific to the SE
            //   documentation site
            clientId: 11854, 
            key: 'ekGQbH8mopUzetlfSTPUrQ((', 
            // Used for cross domain communication, it will be validated
            channelUrl: 'http://www.ethanswer.com/',
            redirect_uri:'http://www.ethanswer.com/',
            // Called when all initialization is finished
            complete: function(data) { 
                $('#login-button')
                    .removeAttr('disabled')
                    .text('login to stackoverflow'); 
            }
        });

        // Attach click handler to login button
        $('#login-button').click(function() {

            // Make the authentication call, note that being in an onclick handler
            //   is important; most browsers will hide windows opened without a
            //   'click blessing'
            SE.authenticate({
                success: function(data) {
                    localStorage.setItem('account_id',JSON.stringify(data.networkUsers[0].account_id));
                    localStorage.setItem('access_token',JSON.stringify(data.accessToken));
                    //- alert(
                    //-     'User Authorized with account id = ' + 
                    //-     data.networkUsers[0].account_id + ', got access token = ' + 
                    //-     data.accessToken
                    //- ); 
                },
                error: function(data) { 
                    alert('An error occurred:\n' + data.errorName + '\n' + data.errorMessage); 
                },
                scope: ['read_inbox','write_access'],
                networkUsers: true
            });
        });
        });
      }
      if (typeof web3 !== 'undefined') {
        web3 = new Web3(web3.currentProvider);
      } else {
        // set the provider you want from Web3.providers
        web3 = new Web3(new Web3.providers.HttpProvider("https://rinkeby.infura.io/"));
      }
      var token_abi = [{"inputs": [], "constant": true, "name": "mintingFinished", "outputs": [{"type": "bool", "name": ""}], "payable": false, "type": "function"}, {"inputs": [], "constant": true, "name": "name", "outputs": [{"type": "string", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "address", "name": "_spender"}, {"type": "uint256", "name": "_value"}], "constant": false, "name": "approve", "outputs": [{"type": "bool", "name": ""}], "payable": false, "type": "function"}, {"inputs": [], "constant": true, "name": "totalSupply", "outputs": [{"type": "uint256", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "address", "name": "_from"}, {"type": "address", "name": "_to"}, {"type": "uint256", "name": "_value"}], "constant": false, "name": "transferFrom", "outputs": [{"type": "bool", "name": ""}], "payable": false, "type": "function"}, {"inputs": [], "constant": true, "name": "decimals", "outputs": [{"type": "uint8", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "address", "name": "_to"}, {"type": "uint256", "name": "_amount"}], "constant": false, "name": "mint", "outputs": [{"type": "bool", "name": ""}], "payable": false, "type": "function"}, {"inputs": [], "constant": true, "name": "version", "outputs": [{"type": "string", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "address", "name": "_owner"}], "constant": true, "name": "balanceOf", "outputs": [{"type": "uint256", "name": "balance"}], "payable": false, "type": "function"}, {"inputs": [], "constant": false, "name": "finishMinting", "outputs": [{"type": "bool", "name": ""}], "payable": false, "type": "function"}, {"inputs": [], "constant": true, "name": "owner", "outputs": [{"type": "address", "name": ""}], "payable": false, "type": "function"}, {"inputs": [], "constant": true, "name": "symbol", "outputs": [{"type": "string", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "address", "name": "_to"}, {"type": "uint256", "name": "_value"}], "constant": false, "name": "transfer", "outputs": [{"type": "bool", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "address", "name": "_owner"}, {"type": "address", "name": "_spender"}], "constant": true, "name": "allowance", "outputs": [{"type": "uint256", "name": "remaining"}], "payable": false, "type": "function"}, {"inputs": [{"type": "address", "name": "newOwner"}], "constant": false, "name": "transferOwnership", "outputs": [], "payable": false, "type": "function"}, {"payable": false, "type": "fallback"}, {"inputs": [{"indexed": true, "type": "address", "name": "to"}, {"indexed": false, "type": "uint256", "name": "amount"}], "type": "event", "name": "Mint", "anonymous": false}, {"inputs": [], "type": "event", "name": "MintFinished", "anonymous": false}, {"inputs": [{"indexed": true, "type": "address", "name": "owner"}, {"indexed": true, "type": "address", "name": "spender"}, {"indexed": false, "type": "uint256", "name": "value"}], "type": "event", "name": "Approval", "anonymous": false}, {"inputs": [{"indexed": true, "type": "address", "name": "from"}, {"indexed": true, "type": "address", "name": "to"}, {"indexed": false, "type": "uint256", "name": "value"}], "type": "event", "name": "Transfer", "anonymous": false}];
      var bounty_abi = [{"inputs": [{"type": "uint256", "name": "_bountyId"}], "constant": false, "name": "killBounty", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}], "constant": true, "name": "getBountyToken", "outputs": [{"type": "address", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "string", "name": "_data"}], "constant": false, "name": "fulfillBounty", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "uint256", "name": "_newDeadline"}], "constant": false, "name": "extendDeadline", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "uint256", "name": "_fulfillmentId"}, {"type": "string", "name": "_data"}], "constant": false, "name": "updateFulfillment", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "uint256", "name": "_newFulfillmentAmount"}, {"type": "uint256", "name": "_value"}], "constant": false, "name": "increasePayout", "outputs": [], "payable": true, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "uint256", "name": "_newFulfillmentAmount"}], "constant": false, "name": "changeBountyFulfillmentAmount", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "address", "name": "_newIssuer"}], "constant": false, "name": "transferIssuer", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "uint256", "name": "_value"}], "constant": false, "name": "activateBounty", "outputs": [], "payable": true, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "uint256", "name": "_fulfillmentId"}], "constant": false, "name": "fulfillmentPayment", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "address", "name": "_issuer"}, {"type": "uint256", "name": "_deadline"}, {"type": "string", "name": "_data"}, {"type": "uint256", "name": "_fulfillmentAmount"}, {"type": "address", "name": "_arbiter"}, {"type": "bool", "name": "_paysTokens"}, {"type": "address", "name": "_tokenContract"}], "constant": false, "name": "issueBounty", "outputs": [{"type": "uint256", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "address", "name": "_issuer"}, {"type": "uint256", "name": "_deadline"}, {"type": "string", "name": "_data"}, {"type": "uint256", "name": "_fulfillmentAmount"}, {"type": "address", "name": "_arbiter"}, {"type": "bool", "name": "_paysTokens"}, {"type": "address", "name": "_tokenContract"}, {"type": "uint256", "name": "_value"}], "constant": false, "name": "issueAndActivateBounty", "outputs": [{"type": "uint256", "name": ""}], "payable": true, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}], "constant": true, "name": "getBountyArbiter", "outputs": [{"type": "address", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "uint256", "name": "_value"}], "constant": false, "name": "contribute", "outputs": [], "payable": true, "type": "function"}, {"inputs": [], "constant": true, "name": "owner", "outputs": [{"type": "address", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "bool", "name": "_newPaysTokens"}, {"type": "address", "name": "_newTokenContract"}], "constant": false, "name": "changeBountyPaysTokens", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}], "constant": true, "name": "getBountyData", "outputs": [{"type": "string", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "uint256", "name": "_fulfillmentId"}], "constant": true, "name": "getFulfillment", "outputs": [{"type": "bool", "name": ""}, {"type": "bool", "name": ""}, {"type": "address", "name": ""}, {"type": "string", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}], "constant": true, "name": "getNumBounties", "outputs": [{"type": "uint256", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "address", "name": "_newArbiter"}], "constant": false, "name": "changeBountyArbiter", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "uint256", "name": "_newDeadline"}], "constant": false, "name": "changeBountyDeadline", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "uint256", "name": "_fulfillmentId"}], "constant": false, "name": "acceptFulfillment", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": ""}], "constant": true, "name": "bounties", "outputs": [{"type": "address", "name": "issuer"}, {"type": "uint256", "name": "deadline"}, {"type": "string", "name": "data"}, {"type": "uint256", "name": "fulfillmentAmount"}, {"type": "address", "name": "arbiter"}, {"type": "bool", "name": "paysTokens"}, {"type": "uint8", "name": "bountyStage"}, {"type": "uint256", "name": "owedAmount"}, {"type": "uint256", "name": "balance"}], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}], "constant": true, "name": "getBounty", "outputs": [{"type": "address", "name": ""}, {"type": "uint256", "name": ""}, {"type": "uint256", "name": ""}, {"type": "bool", "name": ""}, {"type": "uint256", "name": ""}, {"type": "uint256", "name": ""}, {"type": "uint256", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}, {"type": "string", "name": "_newData"}], "constant": false, "name": "changeBountyData", "outputs": [], "payable": false, "type": "function"}, {"inputs": [{"type": "uint256", "name": "_bountyId"}], "constant": true, "name": "getNumFulfillments", "outputs": [{"type": "uint256", "name": ""}], "payable": false, "type": "function"}, {"inputs": [{"type": "address", "name": "_owner"}], "type": "constructor", "payable": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "bountyId"}], "type": "event", "name": "BountyIssued", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "bountyId"}, {"indexed": false, "type": "address", "name": "issuer"}], "type": "event", "name": "BountyActivated", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "bountyId"}, {"indexed": true, "type": "address", "name": "fulfiller"}, {"indexed": true, "type": "uint256", "name": "_fulfillmentId"}], "type": "event", "name": "BountyFulfilled", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "_bountyId"}, {"indexed": false, "type": "uint256", "name": "_fulfillmentId"}], "type": "event", "name": "FulfillmentUpdated", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "bountyId"}, {"indexed": true, "type": "address", "name": "fulfiller"}, {"indexed": true, "type": "uint256", "name": "_fulfillmentId"}], "type": "event", "name": "FulfillmentAccepted", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "bountyId"}, {"indexed": true, "type": "address", "name": "fulfiller"}, {"indexed": true, "type": "uint256", "name": "_fulfillmentId"}], "type": "event", "name": "FulfillmentPaid", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "bountyId"}], "type": "event", "name": "BountyKilled", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "bountyId"}, {"indexed": true, "type": "address", "name": "contributor"}, {"indexed": false, "type": "uint256", "name": "value"}], "type": "event", "name": "ContributionAdded", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "bountyId"}, {"indexed": false, "type": "uint256", "name": "newDeadline"}], "type": "event", "name": "DeadlineExtended", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "bountyId"}], "type": "event", "name": "BountyChanged", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "_bountyId"}, {"indexed": true, "type": "address", "name": "_newIssuer"}], "type": "event", "name": "IssuerTransferred", "anonymous": false}, {"inputs": [{"indexed": false, "type": "uint256", "name": "_bountyId"}, {"indexed": false, "type": "uint256", "name": "_newFulfillmentAmount"}], "type": "event", "name": "PayoutIncreased", "anonymous": false}];


      var bounty_address = function (){
          switch(document.web3network){
              case "mainnet":
                  return '0x066128b9f7557b5398db3d4ed141f2e64245ffa1';
              break;
              case "ropsten":
                  throw "not supported";
              break;
              case "kovan":
                  throw "not supported";
              break;
              case "rinkeby":
                  throw "0xd5ea74ad5bcec859ea7a7104401ea1c746c84074";
              break;
              case "custom network":
                  return '0xbe716ab501a10d9ea0362bf20a9b77aba1bd2d88';
              break;
          }
      }
      var erc20_approve_gas = 560000;
      var max_gas_for_erc20_bounty_post = 517849;
      var gasLimitMultiplier = 2;
      var gasMultiplier = 1.1;
      var defaultGasPrice = 10**4 * 5; //5 gwei
      var weiPerEther = 10**18;
      console.log(web3)
      var coinbase = web3.eth.coinbase;
      web3.eth.getBalance(coinbase,'latest',function(err,data){
        console.log(data);
      });
      console.log(coinbase);
      var bounty = web3.eth.contract(bounty_abi).at(bounty_address());
      console.log(bounty);
      var tokenAddress = '0x0000000000000000000000000000000000000000';
      var token_contract = web3.eth.contract(token_abi).at(tokenAddress);
      var account = web3.eth.coinbase;
      var amount = 1*weiPerEther ;
      var bounty = web3.eth.contract(bounty_abi).at(bounty_address());
      var expire_date = new Date();
      expire_date.setDate(expire_date.getDate() + 10);
      var ipfs = window.IpfsApi({host: 'ipfs.infura.io', port: '5001', protocol: "https", root:'/api/v0'})
      console.log(ipfs)
      function startBounty(title,userId,link,questionId) {
        //ipfs.ipfsApi = IpfsApi({host: 'ipfs.infura.io', port: '5001', protocol: "https", root:'/api/v0'});
        //ipfs.setProvider({ host: 'ipfs.infura.io', port: 5001, protocol: 'https', root:'/api/v0'});

        var fsPayload = {
          payload: {
            title: title,// A string representing the title of the bounty
            description: null,// A string representing the description of the bounty, including all requirements
            issuer:null,
            funders:[
              // array of personas of those who funded the issue.
            ],
            categories: null,// an array of strings, representing the categories of tasks which are being requested
            created: new Date(),// the timestamp in seconds when the bounty was created
            tokenSymbol: 'ETH',// the symbol for the token which the bounty pays out
            tokenAddress: tokenAddress,// the address for the token which the bounty pays out (0x0 if ETH)

            // ------- add optional fields here -------
            sourceFileName: null,// A string representing the name of the file
            sourceFileHash: null, // The IPFS hash of the file associated with the bounty
            sourceDirectoryHash: null,// The IPFS hash of the directory which can be used to access the file
            webReferenceURL: link// The link to a relevant web reference (ie github issue)
          },
          meta: {
            platform: 'ETHAnswer',// a string representing the original posting platform (ie 'gitcoin')
            schemaVersion: '0.1',// a string representing the version number (ie '0.1')
            schemaName: 'ethAnswerSchema',// a string representing the name of the schema (ie 'standardSchema' or 'gitcoinSchema')
          }
        }
        var fsString = JSON.stringify(fsPayload);
        var data = fsString.toString('binary');
        var files = [{
          path:"/tmp/"+questionId,
          content:data
        }]
        ipfs.add(files, function (error, result) {
            if(error){
                console.error(error);
                return;
            } else {
              issueBounty(result,function(err,bountyResult){
                if (err) {
                  console.error(err);
                } else {
                  console.log(bountyResult);
                }
              })
            }
        });
      }
      function issueBounty(ipfsResult, callback) {
        console.log(ipfsResult);
        var ipfsResultData =ipfsResult[0].hash;
        console.log(ipfsResultData);
        var sampleData = [account, 
          expire_date.getTime(), 
          ipfsResultData, 
          amount, 
          '0x0', 
          false, 
          tokenAddress,
          amount,
          {
              from :account, 
              value:amount
          }];
        console.log(sampleData);
        bounty.issueAndActivateBounty.estimateGas(
          account, 
          expire_date.getTime(), 
          ipfsResultData, 
          amount, 
          '0x0', 
          false, 
          tokenAddress,
          amount,
          {
              from :account, 
              value:amount/4,
              gas:web3.toHex(50000),
              gasPrice:web3.toHex(50000)
          },
          function(error,gasEstimateResult){
            if (error) {
              console.log("Gas Estimate failed")
              console.log(error)
            } else {}
              if (!gasEstimateResult) gasEstimateResult=defaultGasPrice;
              console.log("Gas Estimate done "+gasEstimateResult)
              var gas = Math.round(gasEstimateResult * gasMultiplier);
              var gasLimit = Math.round(gas * gasLimitMultiplier);
              bounty.issueAndActivateBounty.sendTransaction(
                  account, 
                  expire_date.getTime()+"", 
                  ipfsResultData, 
                  amount, 
                  '0x0', 
                  false, 
                  tokenAddress,
                  amount,
                  {
                      from :account, 
                      value:amount, 
                      gas:21000, 
                      gasLimit:21000,
                      gasPrice:10000000000,
                  },
                  function(error,bountyResult){
                      if(error){
                          console.log(error)
                          callback(error);
                      } else {
                        callback(bountyResult);
                      }
                  }
              );
            
          }
        );
      }